[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    backups/
    | \.git/
    | \.hg/
    | \.mypy_cache/
    | \.tox/
    | \.venv/
    | _build/
    | buck-out/
    | build/
    | dist/
    | \.pytest_cache/
    | __pycache__/
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
extend_skip_glob = ["backups/**/*", ".venv/**/*", "build/**/*", "dist/**/*"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
extend-exclude = [
    "backups/",
    ".git/",
    ".venv/",
    "__pycache__/",
    "build/",
    "dist/",
]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
exclude = ["backups/", "build/", "dist/", "scripts/", "tools/check_data_quality.py"]

# Allow missing imports for quicker mypy runs; tighten later per-module as needed
ignore_missing_imports = true

[tool.pre-commit]
# Suggested pre-commit hooks
repos = [
    { repo = "https://github.com/psf/black", rev = "24.0.0", hooks = [
        { id = "black" },
    ] },
    { repo = "https://github.com/PyCQA/isort", rev = "5.12.0", hooks = [
        { id = "isort" },
    ] },
    { repo = "https://github.com/astral-sh/ruff-pre-commit", rev = "v0.6.0", hooks = [
        { id = "ruff", args = [
            "--fix",
        ] },
        { id = "ruff-format" },
    ] },
]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*", "*Tests"]
python_functions = ["test_*"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/backups/*", "*/__pycache__/*", "*/venv/*", "*/.venv/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]  # assert false

[tool.ruff.lint.isort]
known-first-party = ["src"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
